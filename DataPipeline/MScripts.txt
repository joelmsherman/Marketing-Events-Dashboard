M (Power Query) Script:




DIMDate-92908765-b374-44e9-a902-ddc4f88cdf48



VAR MinYear =

YEAR (

MIN ( FACT_PeopleEvents[Event Date] )

)

VAR MaxYear =

YEAR (

MAX ( FACT_PeopleEvents[Event Date] )

)

VAR SchoolBeginMonth = 9

RETURN

ADDCOLUMNS (

FILTER (

CALENDARAUTO (),

AND (

YEAR ( [Date] ) >= MinYear,

YEAR ( [Date] ) <= MaxYear

)

),

"School Year",

IF (

MONTH ( [Date] ) < SchoolBeginMonth,

YEAR ( [Date] ) - 1 & "/"

& YEAR ( [Date] ),

YEAR ( [Date] ) & "/"

& YEAR ( [Date] ) + 1

),

"School Year Sort",

IF (

MONTH ( [Date] ) < SchoolBeginMonth,

YEAR( [Date] ) - 1,

YEAR( [Date] )

),

"Month",

FORMAT (

[Date],

"mmm"

),

"Month Sort",

SWITCH (

TRUE,

MONTH ( [Date] ) = 9, 1,

MONTH ( [Date] ) = 10, 2,

MONTH ( [Date] ) = 11, 3,

MONTH ( [Date] ) = 12, 4,

MONTH ( [Date] ) = 1, 5,

MONTH ( [Date] ) = 2, 6,

MONTH ( [Date] ) = 3, 7,

MONTH ( [Date] ) = 4, 8,

MONTH ( [Date] ) = 5, 9,

MONTH ( [Date] ) = 6, 10,

MONTH ( [Date] ) = 7, 11,

12

)

)





----------------------

@SchoolMeasures



let

Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),

#"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),

#"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})

in

#"Removed Columns"





----------------------

FACT_PeopleEvents



let

// Source Source = Source_Events,



// Replace Grade Descr with Grade ID GradeDim_Task1 = Table.NestedJoin(Source, {"Grade"}, DIM_Grades, {"Grade"}, "DIM_Grades", JoinKind.LeftOuter),

GradeDim_Task2 = Table.ExpandTableColumn(GradeDim_Task1, "DIM_Grades", {"Grade ID"}, {"Grade ID"}),

GradeDim_Task3 = Table.RemoveColumns(GradeDim_Task2,{"Grade"}),



// Replace School Descr with School ID SchoolDim_Task1 = Table.NestedJoin(GradeDim_Task3, {"School Event Location"}, DIM_Schools, {"School Name"}, "DIM_Schools", JoinKind.LeftOuter),

SchoolDim_Task2 = Table.ExpandTableColumn(SchoolDim_Task1, "DIM_Schools", {"School ID"}, {"School ID"}),

SchoolDim_Task3 = Table.RemoveColumns(SchoolDim_Task2,{"School Event Location"}),



// Replace Program Name Descr with Program ID EventDim_Task1 = Table.NestedJoin(SchoolDim_Task3, {"Program Name"}, DIM_Programs, {"Program Name"}, "DIM_Programs", JoinKind.LeftOuter),

EventDim_Task2 = Table.ExpandTableColumn(EventDim_Task1, "DIM_Programs", {"Program ID"}, {"Program ID"}),

EventDim_Task3 = Table.RemoveColumns(EventDim_Task2,{"Program Name"}),



// Replace Educator Name with Educator ID EducatorDim_Task1 = Table.NestedJoin(EventDim_Task3, {"Educator"}, DIM_Educators, {"Educator"}, "DIM_Educators", JoinKind.LeftOuter),

EducatorDim_Task2 = Table.ExpandTableColumn(EducatorDim_Task1, "DIM_Educators", {"Educator ID"}, {"Educator ID"}),

EducatorDim_Task3 = Table.RemoveColumns(EducatorDim_Task2,{"Educator"}),



// Replace Event Type Descr with Event Type ID EventTypeDim_Task1 = Table.NestedJoin(EducatorDim_Task3, {"Event Type"}, DIM_EventType, {"Event Type"}, "DIM_EventType", JoinKind.LeftOuter),

EventTypeDim_Task2 = Table.ExpandTableColumn(EventTypeDim_Task1, "DIM_EventType", {"Event Type ID"}, {"Event Type ID"}),

EventTypeDim_Task3 = Table.RemoveColumns(EventTypeDim_Task2,{"Event Type"})

in

EventTypeDim_Task3





----------------------

FACT_SchoolData



let

// Source Source = Source_Schools,



// Replace School Name with School ID SchoolDim_Task1 = Table.NestedJoin(Source, {"School Name"}, DIM_Schools, {"School Name"}, "DIM_Schools", JoinKind.LeftOuter),

SchoolDim_Task2 = Table.ExpandTableColumn(SchoolDim_Task1, "DIM_Schools", {"School ID"}, {"School ID"}),

SchoolDim_Task3 = Table.RemoveColumns(SchoolDim_Task2,{"District Name", "School Name", "Street", "City", "State", "Zip", "County", "Lat", "Long", "Grades"})

,

#"Columns removed by Measure Killer"= Table.RemoveColumns( SchoolDim_Task3,{"Student % Hispanic","Student % Asian","Student % Black","Counselors/Psychologists","Student % Multi","Teacher % Hispanic","Student % Islander","Teacher % Asian","Teacher % Multi","Student % Native","Teacher % Black","Educational Assistants","Teacher % Native","Teacher % Islander"})

in

#"Columns removed by Measure Killer"





----------------------

DIM_Grades



let

// Source Source = Source_Events,



// Remove extraneous columns not needed in Power BI dashboard SelGradeCol = Table.SelectColumns(Source, {"Grade"}),



// Set column data types SetDataTypes = Table.TransformColumnTypes(SelGradeCol,{{"Grade", type text}}),



// Remove Duplicate Values RemoveDuplicates = Table.Distinct(SetDataTypes),



// Create Primary key PrimaryKey_Task1 = Table.AddIndexColumn(RemoveDuplicates, "Index", 1, 1, Int64.Type),

PrimaryKey_Task2 = Table.ReorderColumns(PrimaryKey_Task1,{"Index", "Grade"}),

PrimaryKey_Task3 = Table.RenameColumns(PrimaryKey_Task2,{{"Index", "Grade ID"}}),



// Add some necessary columns GradeSort = Table.AddColumn(PrimaryKey_Task3, "GradeSort", each if [Grade] = "K" then 1 else if [Grade] = "1st" then 2 else if [Grade] = "2nd" then 3 else if [Grade] = "3rd" then 4 else if [Grade] = "4th" then 5 else if [Grade] = "5th" then 6 else if [Grade] = "6th" then 7 else if [Grade] = "7th" then 8 else if [Grade] = "8th" then 9 else if [Grade] = "9th" then 10 else if [Grade] = "10th" then 11 else if [Grade] = "11th" then 12 else if [Grade] = "12th" then 13 else if [Grade] = "Mixed Grades - Ele" then 14 else if [Grade] = "Mixed Grades - MS" then 15 else 16),

GradeSortType = Table.TransformColumnTypes(GradeSort,{{"GradeSort", Int64.Type}}),

GradeType = Table.AddColumn(GradeSortType, "Grade Type", each if [Grade] = "K" then "Elementary" else if [Grade] = "1st" then "Elementary" else if [Grade] = "2nd" then "Elementary" else if [Grade] = "3rd" then "Elementary" else if [Grade] = "4th" then "Elementary" else if [Grade] = "5th" then "Elementary" else if [Grade] = "Mixed Grades - Ele" then "Elementary" else "Secondary"),

GradeTypeType = Table.TransformColumnTypes(GradeType,{{"Grade Type", type text}})

in

GradeTypeType





----------------------

DIM_Schools



let

// Source Source = Source_Schools,



// Remove extraneous columns not needed in Power BI dashboard RemoveExtraneousColumns = Table.SelectColumns(Source,{"District Name", "School Name", "City", "County", "Lat", "Long", "Grades"}),



// Set the column data types SetDataTypes = Table.TransformColumnTypes(RemoveExtraneousColumns,{{"District Name", type text}, {"School Name", type text}, {"City", type text}, {"County", type text}, {"Lat", type number}, {"Long", type number},{"Grades", type text}}),



// Remove any duplicate entries RemoveDuplicates = Table.Distinct(SetDataTypes),



// Add and arrange primary key field PrimaryKey_Task1 = Table.AddIndexColumn(RemoveDuplicates, "Index", 1, 1, Int64.Type),

PrimaryKey_Task2 = Table.ReorderColumns(PrimaryKey_Task1,{"Index", "District Name", "School Name", "City", "County", "Lat", "Long", "Grades"}),

PrimaryKey_Task3 = Table.RenameColumns(PrimaryKey_Task2,{{"Index", "School ID"}})

,

#"Columns removed by Measure Killer"= Table.RemoveColumns( PrimaryKey_Task3,{"City","Grades"})

in

#"Columns removed by Measure Killer"





----------------------

DIM_Programs



let

// Source Source = Source_Events,



// Remove extraneous columns not needed in Power BI dashboard SelPNCol = Table.SelectColumns(Source, {"Program Name"}),



// Set column data types SetDataTypes = Table.TransformColumnTypes(SelPNCol,{{"Program Name", type text}}),



// Remove Duplicate Values RemoveDuplicates = Table.Distinct(SetDataTypes),



// Create Primary key PrimaryKey_Task1 = Table.AddIndexColumn(RemoveDuplicates, "Index", 1, 1, Int64.Type),

PrimaryKey_Task2 = Table.ReorderColumns(PrimaryKey_Task1,{"Index", "Program Name"}),

PrimaryKey_Task3 = Table.RenameColumns(PrimaryKey_Task2,{{"Index", "Program ID"}})



in

PrimaryKey_Task3





----------------------

DIM_Educators



let

// Source Source = Source_Events,



// Remove extraneous columns not needed in Power BI dashboard SelEducatorCol = Table.SelectColumns(Source, {"Educator"}),



// Set column data types SetDataTypes = Table.TransformColumnTypes(SelEducatorCol,{{"Educator", type text}}),



// Remove Duplicate Values RemoveDuplicates = Table.Distinct(SetDataTypes),



// Create Primary key PrimaryKey_Task1 = Table.AddIndexColumn(RemoveDuplicates, "Index", 1, 1, Int64.Type),

PrimaryKey_Task2 = Table.ReorderColumns(PrimaryKey_Task1,{"Index", "Educator"}),

PrimaryKey_Task3 = Table.RenameColumns(PrimaryKey_Task2,{{"Index", "Educator ID"}})



in

PrimaryKey_Task3





----------------------

@PeopleEventMeasures



let

Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),

#"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),

#"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})

in

#"Removed Columns"





----------------------

@FormatLabelMeasures



let

Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),

#"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),

#"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})

in

#"Removed Columns"





----------------------

@DynamicMeasureTable_Axis1-727b531c-c9f8-4f9d-b766-263a2495950d



DATATABLE (

"Axis 1 Measure", STRING,

"Sort Order", INTEGER,

{

{ "% Students of Color", 1 },

{ "% Teachers of Color", 2 },

{ "Teacher Experience %", 3 },

{ "% Req Immunizations", 4 },

{ "% Students Free/Reduced Lunch", 5 },

{ "Teacher Retention %", 6 }

}

)





----------------------

@DynamicMeasureTable_Axis2-ffe48997-8659-4605-9f13-b4cca2cce3bb



DATATABLE (

"Axis 2 Measure", STRING,

"Sort Order", INTEGER,

{

{ "% Students of Color", 1 },

{ "% Teachers of Color", 2 },

{ "Teacher Experience %", 3 },

{ "% Req Immunizations", 4 },

{ "% Students Free/Reduced Lunch", 5 },

{ "Teacher Retention %", 6 }

}

)





----------------------

DIM_EventType



let

// Source Source = Source_Events,



// Remove extraneous columns not needed in Power BI dashboard SelEventTypeCol = Table.SelectColumns(Source, {"Event Type"}),



// Set column data types SetDataTypes = Table.TransformColumnTypes(SelEventTypeCol,{{"Event Type", type text}}),



// Remove Duplicate Values RemoveDuplicates = Table.Distinct(SetDataTypes),



// Create Primary key PrimaryKey_Task1 = Table.AddIndexColumn(RemoveDuplicates, "Index", 1, 1, Int64.Type),

PrimaryKey_Task2 = Table.ReorderColumns(PrimaryKey_Task1,{"Index", "Event Type"}),

PrimaryKey_Task3 = Table.RenameColumns(PrimaryKey_Task2,{{"Index", "Event Type ID"}})



in

PrimaryKey_Task3





----------------------

@LastRefresh



let



SummerTimeStartDate = Date.StartOfWeek(#date(Date.Year(DateTime.LocalNow()), 3, 14), Day.Sunday),

WinterTimeStartDate = Date.StartOfWeek(#date(Date.Year(DateTime.LocalNow()), 10, 14), Day.Sunday),



Timezonehours = if DateTimeZone.RemoveZone(DateTimeZone.UtcNow()) < SummerTimeStartDate & #time(1, 0, 0) or

DateTimeZone.RemoveZone(DateTimeZone.UtcNow()) > WinterTimeStartDate & #time(1, 0, 0) then

-8 else -7,



#"Date and Time" = DateTimeZone.SwitchZone(DateTimeZone.UtcNow(), Timezonehours, 0),



#"Converted to Table" = #table(1, {{#"Date and Time"}}),



#"Renamed Columns" = Table.RenameColumns(#"Converted to Table",{{"Column1", "DateTime"}}),



#"Changed Type" = Table.TransformColumnTypes(#"Renamed Columns",{{"DateTime", type datetimezone}}),



#"Duplicated Column" = Table.DuplicateColumn(#"Changed Type", "DateTime", "DateTime - Copy"),



#"Renamed Columns1" = Table.RenameColumns(#"Duplicated Column",{{"DateTime - Copy", "Date"}}),



#"Duplicated Column1" = Table.DuplicateColumn(#"Renamed Columns1", "Date", "Date - Copy"),



#"Changed Type1" = Table.TransformColumnTypes(#"Duplicated Column1",{{"Date - Copy", type time}, {"Date", type date}}),



#"Renamed Columns2" = Table.RenameColumns(#"Changed Type1",{{"Date - Copy", "Time"}})

in



#"Renamed Columns2"





----------------------

@KPISelection-94285d11-2e5f-4af8-a79c-7b61cbb97e26



{

("Events", NAMEOF('@PeopleEventMeasures'[Events]), 0),

("Students Reached", NAMEOF('@PeopleEventMeasures'[Students Reached]), 1),

("Duration (min)", NAMEOF('@PeopleEventMeasures'[Duration]), 2)

}





----------------------

@DimensionSelection-2812c856-eb1f-4687-8fdc-b3f95b1218be



{

("Educator", NAMEOF('DIM_Educators'[Educator]), 0),

("Program Name", NAMEOF('DIM_Programs'[Program Name]), 1),

("Grade", NAMEOF('DIM_Grades'[Grade]), 2),

("Event Type", NAMEOF('DIM_EventType'[Event Type]), 3)

}





----------------------

@Geography-4f10049b-13c3-42dd-9abc-3f11664cb7d2



{

("County", NAMEOF('DIM_Schools'[County]), 0),

("District", NAMEOF('DIM_Schools'[District Name]), 1)

}





----------------------